<tool id="interproscan" name="Interproscan functional predictions of ORFs"  version="5.0.0">
    <description>Interproscan functional predictions of ORFs</description>
    <requirements>
        <requirement type="package">signalp</requirement>
        <requirement type="package">phobius</requirement>
        <requirement type="package">tmhmm</requirement>
        <requirement type="set_environment">INTERPROSCAN_SCRIPT_PATH</requirement>
    </requirements>
    <command>
        cmsearch --tblout
            --cpu 12
            -o /dev/null
            --tformat $seqdb.ext #target format: fasta, embl, genbank, ddbj, stockholm, pfam, a2m, afa, clustal, and phylip 
            $bottomonly
            $toponly
            $cyk
            $notrunc
            $max
            $nohmm
            $mid
            $bitscore_thresholds
            --tblout $outfile
            $g
            #if $A:
                $A $multiple_alignment_output
            #end if


            2>&#38;1

            $cmfile
            $seqdb

    </command>
        <inputs>
            <param name="cmfile" type="data" format="fasta" label="Covariance models"/>
            <param name="seqdb" type="data" format="fasta,embl,genbank" label="Sequence database"/>

            <param name="g" truevalue="-g" falsevalue="" checked="False" type="boolean" 
                label="Turn on the glocal alignment algorithm ..." help="... global with respect to the query 
                model and local with respect to the target database."/>

            <param name="bottomonly" truevalue="--bottomonly" falsevalue="" checked="False" type="boolean" 
                label="Only search the bottom (Crick) strand of target sequences" help="in the sequence database"/>
            <param name="toponly" truevalue="--toponly" falsevalue="" checked="False" type="boolean" 
                label="Only search the top (Watson) strand of target sequences" help="in the sequence database"/>

            <param name="cyk" truevalue="--cyk" falsevalue="" checked="False" type="boolean" 
                label="Use the CYK algorithm, not Inside, to determine the final score of all hits" help=""/>
            <param name="--acyk" truevalue="--cyk" falsevalue="" checked="False" type="boolean" 
                label="Use the CYK algorithm to align hits" help="By default, the Durbin/Holmes optimal accuracy algorithm is used, which finds the alignment that maximizes the expected accuracy of all aligned residues."/>

            <param name="notrunc" truevalue="--notrunc" falsevalue="" checked="False" type="boolean" 
                label="Turn off truncated hit detection" help=""/>

            <!-- accelleration pipeline -->

            <param name="max" truevalue="--max" falsevalue="" checked="False" type="boolean" 
                label="Turn off all filters, and run non-banded Inside on every full-length target sequence" help="This
                increases sensitivity somewhat, at an extremely large cost in speed."/>

            <param name="nohmm" truevalue="--nohmm" falsevalue="" checked="False" type="boolean" 
                label="Turn off all HMM filter stages " help=""/>

            <param name="mid" truevalue="--mid" falsevalue="" checked="False" type="boolean" 
                label="Turn off the HMM SSV and Viterbi filter stages" help=""/>


            <!-- Options for model-specific score thresholding -->

            <param name="bitscore_thresholds" type="select" label="Bit score thresholds" help="Curated CM databases may define specific 
            bit score thresholds for each CM, superseding any thresholding based on statistical significance alone.">
                <option value="" selected="true">None</option>
                <option value="--cut_ga">GA (gathering) bit scores</option>
                <option value="--cut_nc">NC (noise cutoff) bit score</option>
                <option value="--cut_tc">TC (trusted cutoff) bit score</option>
            </param>

            <!-- Options for inclusion thresholds -->

            <param name="seqtype" type="select" label="Type of the input sequences" help="Inclusion thresholds are stricter than reporting thresholds. 
                Inclusion thresholds control which hits are considered to be reliable enough to be included in an output alignment or in a 
                possible subsequent search round, or marked as significant (”!”) as opposed to questionable (”?”) in hit output.">
                <option value="--incE" selected="true">Protein</option>
                <option value="--incT">DNA / RNA</option>
            </param>


--incE <x> Use an E-value of <= <x> as the hit inclusion threshold. The default is 0.01, meaning that
on average, about 1 false positive would be expected in every 100 searches with different
query sequences.
--incT <x> Instead of using E-values for setting the inclusion threshold, instead use a bit score of >=
<x> as the hit inclusion threshold. By default this option is unset.




<!-- Options controlling reporting thresholds -->
Reporting thresholds control which hits are reported in output files (the main output and --tblout) Hits are ranked by
statistical significance (E-value). By default, all hits with an E-value <= 10 are reported. The following options allow you
to change the default E-value reporting thresholds, or to use bit score thresholds instead.
-E <x> In the per-target output, report target sequences with an E-value of <= <x>. The default is
10.0, meaning that on average, about 10 false positives will be reported per query, so you
can see the top of the noise and decide for yourself if it’s really noise.
-T <x> Instead of thresholding per-CM output on E-value, report target sequences with a bit score
of >= <x>.

	<conditional name="">
		<param name="choice" type="select" label="Options controlling reporting thresholds">
			<option value="line" selected="true">entire line</option>
			<option value="column">specific column</option>
		</param>

		<when value="line">
		</when>

		<when value="column">
    			<param name="column" label="in column" type="data_column" data_ref="input" accept_default="true" />
		</when>
	</conditional>




            <param name="A" truevalue="-A" falsevalue="" checked="False" type="boolean" 
                label="Save a multiple alignment of all significant hits ..." help="... those satisfying inclusion thresholds"/>


        </inputs>
    <outputs>

        <data format="tabular" name="outfile" label="cmsearch on ${on_string}"/>
        <data format="tabular" name="multiple_alignment_output" label="cmsearch on ${on_string} (multi alignment)">
            <filter>A is True</filter>
        </data>

    </outputs>
    <requirements>
    </requirements>
    <help>

**What it does**

Options for model-specific score thresholding
---------------------------------------------


  - GA thresholds are generally considered to be the reliable curated thresholds defining family membership; for example, in Rfam, these thresholds define what gets included in Rfam Full alignments based on searches with Rfam Seed models.
  - NC thresholds are generally considered to be the score of the highest-scoring known false positive.
  - TC thresholds are generally considered to be the score of the lowest-scoring known true positive that is above all known false positives.


-g Turn on the glocal alignment algorithm, global with respect to the query model and local with
respect to the target database. By default, the local alignment algorithm is used which is
local with respect to both the target sequence and the model. In local mode, the alignment to
span two or more subsequences if necessary (e.g. if the structures of the query model and
target sequence are only partially shared), allowing certain large insertions and deletions
in the structure to be penalized differently than normal indels. Local mode performs better
on empirical benchmarks and is significantly more sensitive for remote homology detection.
Empirically, glocal searches return many fewer hits than local searches, so glocal may be
desired for some applications. With -g, all models must be calibrated, even those with zero
basepairs.




    </help>
</tool>
