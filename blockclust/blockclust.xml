<tool id="blockclust" name="BlockClust" version="0.1">
    <description>Non-coding RNA clustering from deep sequencing read profiles</description>
    <command interpreter="perl">
        #if str($mode.operation) == "pre":
            #set $outputdir = $tags_bed.extra_files_path
            /home/videmp/projects/BlockClust/src/BlockClustPipeLine.pl -m PRE -bam $mode.reads_bam -tbed $tags_bed;
        #end if

        #if str($mode.operation) == "clust":
            #set $outputdir = $clusters.extra_files_path
            #set $accept_bed=list()
            #set $reject_bed=list()
            ## prepare annotations
            #if str($mode.reference) == "hg19":
                $accept_bed.append("/home/videmp/projects/galaxy/galaxy-central/tools/test/annotations/hg19/hg19.accept.bed")
                $reject_bed.append("/home/videmp/projects/galaxy/galaxy-central/tools/test/annotations/hg19/hg19.reject.bed")
            #elif str($mode.reference) == "mm10":
                $accept_bed.append("/home/videmp/projects/galaxy/galaxy-central/tools/test/annotations/mm10/mm10.accept.bed")
                $reject_bed.append("/home/videmp/projects/galaxy/galaxy-central/tools/test/annotations/mm10/mm10.reject.bed")
            #elif str($mode.reference) == "dm3":
                $accept_bed.append("/home/videmp/projects/galaxy/galaxy-central/tools/test/annotations/dm3/dm3.accept.bed")
                $reject_bed.append("/home/videmp/projects/galaxy/galaxy-central/tools/test/annotations/dm3/dm3.reject.bed")
            #end if
            /home/videmp/projects/BlockClust/src/BlockClustPipeLine.pl -m TEST -f SEQUENCE -c /home/videmp/projects/galaxy/galaxy-central/tools/test/blockclust.config
            -t $mode.input_bbo
            -a #echo ''.join( $accept_bed )
            -r #echo ''.join( $reject_bed )
            -o $outputdir;
            cp #echo os.path.join($outputdir, 'mcl_clusters','all_clusters.bed')# $clusters;
            cp #echo os.path.join($outputdir, 'hclust_tree.pdf')# $hclust_plot;
            cp #echo os.path.join($outputdir, 'discretized.gspan.tab')# $sim_tab_out;
        #end if
    
        #if str($mode.operation) == "post":
            #set $outputdir = $clusters_bed.extra_files_path
            /home/videmp/projects/BlockClust/src/BlockClustPipeLine.pl -m POST -cbed $mode.clusters_bed -cm $mode.cmsearch_out -tab $mode.sim_tab_in -o $outputdir;
            cp #echo os.path.join($outputdir, 'cluster_distribution.pdf')# $cluster_dist;
        #end if
    </command>
    <inputs>
        <conditional name="mode">
            <param name="operation" type="select" label="Select mode of operation">
                <option value="pre">Pre-processing </option>
                <option value="clust">Clustering</option>
                <option value="post">Post-processing</option>
            </param>
            <when value="pre">
                <param name="reads_bam" type="data" format="bam" label="BAM file containing alignments" />
            </when>
            <when value="clust">
                <param name="input_bbo" type="data" format="tabular" label="Input blockgroups file" />
                <param name="reference" type="select" label="Select reference genome">
                    <option value="hg19">Human (hg19)</option>
                    <option value="mm10">Mouse (mm10)</option>
                    <option value="dm3">Fly (dm3)</option>
                </param>
            </when>
            <when value="post">
                <param name="clusters_bed" type="data" format="bed" label="BED file containing clusters (output of BlockClust)" />
                <param name="cmsearch_out" type="data" format="tabular" label="Output of cmsearch tool" />
                <param name="sim_tab_in" type="data" format="tabular" label="Pairwise similarities file" />
            </when>
        </conditional>
    </inputs>

    <outputs>
        <data format="bed" name="tags_bed" label="BlockClust: BAM to BED on ${on_string}">
            <filter> mode["operation"]=="pre"</filter>
        </data>
        <data format="bed" name="clusters" label="BlockClust: Clustering BED on ${on_string}">
            <filter> mode["operation"]=="clust"</filter>
        </data>
        <data format="pdf" name="hclust_plot" label="BlockClust: Hierarchical clustering plot on ${on_string}" >
            <filter> mode["operation"]=="clust"</filter>
        </data>
        <data format="tabular" name="sim_tab_out" label="BlockClust: Pairwise similarities on ${on_string}">
            <filter> mode["operation"]=="clust"</filter>
        </data>
        <data format="tabular" name="analysis" label="BlockClust: Cluster analysis on ${on_string}" >
            <filter> mode["operation"]=="post"</filter>
        </data>
        <data format="pdf" name="cluster_dist" label="BlockClust: Cluster distribution on ${on_string}" >
            <filter> mode["operation"]=="post"</filter>
        </data>
    </outputs>
    <help>

.. class:: infomark

**What it does** 

Clusters the read profiles (i.e., blockgroups) from the blockbuster tool.

**Inputs**

BlockClust needs output of tool blockbuster as input 

**Output**

BlockClust produces a fasta file containing clusters.

------

**Licenses**

If **BlockClust** is used to obtain results for scientific publications it
should be cited as [1]_.

**References** 

.. [1] 

------

    </help>
</tool>
