<tool id="rnafold" name="RNAFold" version="2.1.6">
	<description>Calculate minimum free energy secondary structures and partition function of RNAs</description>
	<requirements>
		<requirement type="package" version="2.1.6">ViennaRNA</requirement>
	</requirements>

	<command>
		RNAfold -T $temperature -d$dangling &lt; $sequenceFile &gt; $out_file
		#if $pfselect.pf=="yes" 
			--partfunc=$pfselect.pfvalue
		#end if
		#if $measelect.mea=="yes"
			--MEA=$measelect.meavalue
		#end if
		#if $varExists('$advancedOptions.noconversion')	
			#if $advancedOptions.noconversion 
				--noconv
			#end if
			#if $advancedOptions.gquad
				--gquad
			#end if
			#if $advancedOptions.nolp
				--noLP
			#end if
			#if $advancedOptions.nogu
				--noGU
			#end if
			#if $advancedOptions.noclosinggu
				--noClosingGU
			#end if
			#if $advancedOptions.notetra
				--noTetra
			#end if
			#if $advancedOptions.canonicalonly
				--canonicalBPonly
			#end if
			#if $advancedOptions.circular
				--circ
			#end if
		#end if
	</command>
	<inputs>
		<param name="sequence" size="400" type="text" value="" label="sequence" help="here you can enter the sequence you want to analyse" />
		<param name="temperature" size="6" type="float" value="37.0" label="temperature [Â°C]" help="-T"/>
		<param name="dangling" type="select" label="how to treat dangling end energies" help="-d">
			<option value="2">2: unpaired bases participate in all dangling ends</option>
			<option value="0">0: ignore dangling ends</option>
			<option value="1">1: unpaired bases participate in one dangling end only</option>
			<option value="3">3: allow coaxial stacking</option>
		</param>
		<conditional name="pfselect">
			<param name="pf" type="select" label="calculate partition function" help="--partfunc">
				<option value="no">no</option>
				<option value="yes">yes</option>
			</param>
			<when value="yes">
				<param name="pfvalue" size="5" type="integer" value="1" label="Partition Function value"/>
			</when>
		</conditional>

		<conditional name="measelect">
			<param name="mea" type="select" label="calculate maximum expected accuracy" help="--MEA">
				<option value="no">no</option>
				<option value="yes">yes</option>
			</param>
			<when value="yes">
				<param name="meavalue" size="6" type="float" value="1.0" label="Gamma Value"/>
			</when>
		</conditional>
		<conditional name="advancedOptions">
			<param name="advancedSelector" type="boolean" checked="false" label=" advanced options"/>
			<when value="true">
				<param name="noconversion" type="boolean" checked="false" label="no conversion" help="--noconv  do not convert thymine to uracile (T -> U)."/>
				<param name="gquad" type="boolean" checked="false" label="G Quadruplex formation" help="-g  take into account G Quadruplex formation"/>
				<param name="nolp" type="boolean" checked="false" label="No lonely pairs" help="--noLP  don't allow lonely pairs."/>
				<param name="nogu" type="boolean" checked="false" label="No GU pairing" help="--noGU  don't allow pairing of G and U."/>
				<param name="noclosinggu" type="boolean" checked="false" label="No GU pairing at the ends" help="--noClosingGU  don't allow pairing of G and U at the ends of helices."/>
				<param name="notetra" type="boolean" checked="false" label="No stabilization for loops, hairpins etc." help="--noTetra"/>
				<param name="canonicalonly" type="boolean" checked="false" label="Canonical basepairing only" help="--canonicalBPonly"/>
				<param name="circular" type="boolean" checked="false" label="Assume circular RNA structure" help="--circ"/>
			</when>
		</conditional>
	</inputs>
	<outputs>  
		<data format="txt" name="out_file" label="Dot Bracket"/>
		<data format="ps" name="RNA2structure" label="RNA 2nd structure" from_work_dir="rna.ps"/>
		<data format="ps" name="dot" label="Base Pairing Matrix" from_work_dir="dot.ps">
			<filter>(pfselect['pf'] == "yes")</filter>
		</data>
		<data format="ps" name="dot2" label="Base Pairing Matrix 2" from_work_dir="dot2.ps">
			<filter>(pfselect['pf'] == "yes")</filter>
			<filter>(pfselect['pfvalue'] == "2")</filter>
		</data>
	</outputs>

	<configfiles>
		<configfile name="sequenceFile">$sequence</configfile>
	</configfiles>

   <tests>
    </tests>
    <help>
**RNAfold**
The program reads RNA sequences, calculates their minimum free 
energy (mfe) structure and prints to stdout the mfe structure in bracket 
notation and its free energy. If the -p option was given it also computes the 
partition function (pf) and base pairing probability matrix, and prints the 
free energy of the thermodynamic ensemble, the frequency of the mfe structure 
in the ensemble, and the ensemble diversity to stdout.

It also produces PostScript files with plots of the resulting secondary 
structure graph and a "dot plot" of the base pairing matrix.
The dot plot shows a matrix of squares with area proportional to the pairing 
probability in the upper right half, and one square for each pair in the 
minimum free energy structure in the lower left half. For each pair i-j with 
probability p>10E-6 there is a line of the form

i  j  sqrt(p)  ubox

in the PostScript file, so that the pair probabilities can be easily extracted.

Sequences may be provided in a simple text format where each sequence occupies 
a single line. Output files are named "rna.ps" and "dot.ps". Existing files 
of the same name will be overwritten.
It is also possible to provide sequence data in FASTA format. In this case, the 
first word (max. 42 char) of the FASTA header will be used for output file 
names. PostScript files "name_ss.ps" and "name_dp.ps" are produced for the 
structure and dot plot, respectively.
Once FASTA input was provided all following sequences must be in FASTA format 
too.
The program will continue to read new sequences until a line consisting of the 
single character @ or an end of file condition is encountered.



-----

**Input format**

RNAfold requires one input sequence:

- Can be provided in the textbox or by a file

------

**Outputs**

- text output
- MFE structure in a dot-bracket file
- structure-plot and dot-plot postscript files

    </help>
</tool>
