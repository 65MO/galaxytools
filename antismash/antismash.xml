<tool id="antismash" name="Secondary Metabolites" version="2.0.2.0">
  <description>and Antibiotics Analysis (antiSMASH)</description>
  <command>run_antismash.py 

    --input $infile
    --cpus 4
    #set $type_list = ','.join([$type for $type in $types])
    --enable $type_list
    --input-type nucl
    $smcogs
    $clusterblast
    $subclusterblast
    $inclusive
    $full_hmmer
    $full_blast


  ##--from START          Start analysis at nucleotide specified
  ##--to END  

    </command>
    <inputs>
        <param name="infile" type="data" format="gb,embl" label="Nucleotide sequence file in GenBank or EMBL format"/>

        <param name="smcogs" type="boolean" label="Look for sec.met. clusters of orthologous groups" falsevalue="" truevalue="--smcogs" checked="false" />
        <param name="clusterblast" type="boolean" label="BLAST identified clusters against known clusters" truevalue="--clusterblast" falsevalue="" checked="false" />
        <param name="subclusterblast" type="boolean" label="BLAST identified clusters against known subclusters" truevalue="--subclusterblast" falsevalue="" checked="false" />

        <param name="inclusive" type="boolean" label="Use inclusive algorithm for cluster detection" truevalue="--inclusive" falsevalue="" checked="false" />
        <param name="full_hmmer" type="boolean" label="Run a whole-genome HMMer analysis" truevalue="--full-hmmer" falsevalue="" checked="false" />
        <param name="full_blast" type="boolean" label="Run a whole-genome BLAST analysis" truevalue="--full-blast" falsevalue="" checked="false" />

        <param name="types" type="select" display="checkboxes" multiple="true" label="Gene cluster types to search">
            <option value="1" selected="True">all</option>
            <option value="2">type I polyketide synthases</option>
            <option value="3">type II polyketide synthases</option>
            <option value="4">type III polyketide synthases</option>
            <option value="5">nonribosomal peptide synthetases</option>
            <option value="6">terpene synthases</option>
            <option value="7">lantibiotics</option>
            <option value="8">bacteriocins</option>
            <option value="9">beta-lactams</option>
            <option value="10">aminoglycosides / aminocyclitols</option>
            <option value="11">aminocoumarins</option>
            <option value="12">siderophores</option>
            <option value="13">ectoines</option>
            <option value="14">butyrolactones</option>
            <option value="15">indoles</option>
            <option value="16">nucleosides</option>
            <option value="17">phosphoglycolipids</option>
            <option value="18">melanins</option>
            <option value="19">others</option>
        </param>

<!--
t1pks   (PKS_KS & PKS_AT) or (ene_KS & PKS_AT) or (mod_KS & PKS_AT) or (hyb_KS & PKS_AT) or (itr_KS & PKS_AT) or (tra_KS & PKS_AT)      20      20
transatpks      (PKS_KS & ATd) or (ene_KS & ATd) or (mod_KS & ATd) or (hyb_KS & ATd) or (itr_KS & ATd) or (tra_KS & ATd)        20      20
t2pks   t2ks or t2clf or t2pks2 20      20
t3pks   Chal_sti_synt_C or Chal_sti_synt_N      20      20
t4pks   hglE or hglD    20      20
nrps    (Condensation & AMP-binding) or (Condensation & A-OX) or cluster(Condensation,AMP-binding)      20      20
terpene Terpene_Synth or Terpene_synth_C or phytoene_synt or Lycopene_cycl or terpene_cyclase or NapT7 or fung_ggpps or fung_ggpps2 or dmat or trichodiene_synth        20      10
lantipeptide    (Lant_dehyd_N & Lant_dehyd_C) or cluster(LANC_like,Flavoprotein) or cluster(LANC_like,Trp_halogenase) or cluster(LANC_like,p450) or (LANC_like & Pkinase) or (LANC_like & DUF4135) or cluster(LANC_like,Lant_dehyd_N) or cluster(LANC_like,Lant_dehyd_C) or cluster(LANC_like,adh_short) or cluster(LANC_like,adh_short_C2) or TIGR03731 or Antimicr18 or Gallidermin or L_biotic_A or TIGR03731 or leader_d or leader_eh or leader_abc or mature_d or mature_ab or mature_a or mature_b or mature_ha or mature_h_beta or lacticin_l or lacticin_mat or LD_lanti_pre or strep_PEQAXS    20      10
bacteriocin     strepbact or Antimicrobial14 or Bacteriocin_IId or BacteriocIIc_cy or Bacteriocin_II or Bacteriocin_IIi or Lactococcin or Antimicrobial17 or Lactococcin_972 or Bacteriocin_IIc or LcnG-beta or Bacteriocin_Iii or Subtilosin_A or Cloacin or Linocin_M18 or TIGR03603 or TIGR03604 or TIGR03605 or TIGR03651 or TIGR03678 or TIGR03693 or TIGR03798 or TIGR03882 or TIGR03601 or TIGR03602 or TIGR03795 or TIGR03793 or TIGR03975 or mvnA or thiostrepton or subtilosin or cypemycin or mvd or lasso or DUF692 or micJ25 or mcjC or glycocin or botH or skfc or thuricin or sublancin  20      5
blactam BLS or CAS or tabtoxin  20      10
amglyccycl      strH or strK1 or strK2 or NeoL or DOIS or ValA or SpcFG or SpcDK_glyc or salQ   20      10
aminocoumarin   novK or novJ or novI or novH or SpcDK_cou       20      10
siderophore     IucA_IucC       20      5
ectoine ectoine_synt    20      5
butyrolactone   AfsA    20      5
indole  indsynth        20      10
nucleoside      LipM or LipU or LipV or LipU or ToyB or TunD or pur6 or pur10 or nikJ or nikO   20      10
phosphoglycolipid       MoeO5 or moeGT  20      10
melanin melC    20      5
oligosaccharide minimum(3,[Glycos_transf_1,Glycos_transf_2,Glyco_transf_28,MGT,MGT2,DUF1205], [MGT2])   20      10
furan   mmyO    20      5
hserlactone     Autoind_synth   20      10
thiopeptide     cluster(Lant_dehyd_C,YcaO) or cluster(Lant_dehyd_N,YcaO)        20      10
phenazine       phzB    20      10
phosphonate     phosphonates    20      20
other   (PP-binding & AMP-binding) or (PP-binding & A-OX) or (NAD_binding_4 & A-OX) or (NAD_binding_4 & AMP-binding) or LmbU or goadsporin_like or Neocarzinostat or cyanobactin_synth or cycdipepsynth or fom1 or bcpB or frbD or mitE or vlmB or prnB or CaiA or bacilysin or cypI    20      20

-->


    </inputs>
    <outputs>
        <data format="fasta" name="geneclusterprots" label="${tool.name} on ${on_string} (Gen Cluster Proteins)" />
        <data format="tabular" name="zip" label="${tool.name} on ${on_string} (all files compressed)" />
        <data format="html" name="html" label="${tool.name} on ${on_string} (html report)" />
        <data name="embl" format="text" label="${tool.name} on ${on_string} EMBL Output Format">
          <filter>(wg_blast == True or pfam == True)</filter>
        </data>
    </outputs>
  <help>
    
.. class:: infomark

That version of antiSMASH can only handle one sequence. So multi-sequence FASTA files are not supported.
For multiple sequences please use multi-antiSMASH. The advantage of that tool is that it will provide you with a 
archive of all results created from antiSMASH (It can be large!) and a HTML output, for better inspection.


**What it does**

antiSMASH allows the rapid genome-wide identification, annotation and analysis of secondary metabolite biosynthesis gene clusters in bacterial and fungal genomes. 
It integrates and cross-links with a large number of in silico secondary metabolite analysis tools that have been published earlier.


**Input**

If you don't have an annotated GenBank or embl file you also can provide a glimmer prediction output. You can created it with glimmer or glimmerHMM.


**References**

Marnix H. Medema, Kai Blin, Peter Cimermancic, Victor de Jager, Piotr Zakrzewski, Michael A. Fischbach, Tilmann Weber, 
Rainer Breitling and Eriko Takano (2011). antiSMASH: Rapid identification, annotation and analysis of secondary metabolite biosynthesis gene clusters. Nucleic Acids Research, doi: 10.1093/nar/gkr466.

http://antismash.secondarymetabolites.org/help.html

  </help>
</tool>
