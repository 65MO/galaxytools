<tool id="bg_eden_nearest_neighbor" name="EDeN Nearest Neighbors" version="0.1">
    <description></description>
    <expand macro="requirements" />
    <macros>
        <import>eden_macros.xml</import>
    </macros>
    <command>
        tmp_dir=`mktemp -d -u`;
        EDeN --action NEAREST_NEIGHBOR

        --input_data_file_name $infile
        --target_file_name $target_infile

        --file_type "SPARSE_VECTOR"
        --binary_file_type

        @kernel_type_options@
        --graph_type $graph_type
        @input_smooth_conditional@

        @normalization_kernel_hash_radius_dist_vertex@

        --output_directory_path \$tmp_dir

    </command>
    <inputs>

        <param format="eden_sparse_vector" name="infile" type="data" label="Input Graph" help=""/>
        <param format="txt" name="target_infile" type="data" label="Target file" help=""/>

        <expand macro="input_smooth_conditional" />

        <expand macro="kernel_type_options" />

        <expand macro="graph_types" />

        <expand macro="normalization_kernel_hash_radius_dist_vertex" />

    </inputs>
    <outputs>
        <data format="gspan" name="outfile" label="gSpan from ${on_string}"/>
    </outputs>
    <tests>
        <test>
            <param name="infile" value="3_molceuls.sdf" />
            <output name="outfile" file="3_molecules.gspan" />
        </test>
    </tests>
    <help>

.. class:: infomark

**What it does** 

Nearest neighbors are efficiently identified with a locality sensitive hashing technique.

@references@

    </help>
</tool>
