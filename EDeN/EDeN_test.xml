<tool id="bg_eden_test" name="EDeN Test" version="0.1">
    <description></description>
    <macros>
        <import>eden_macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <command>
        tmp_dir=`mktemp -d -u`;
        EDeN --action TEST

        --input_data_file_name  $sparse_vector_infile
        --file_type "SPARSE_VECTOR"
        --binary_file_type

        --model_file_name $model_infile

        --output_directory_path \$tmp_dir
        --minimal_output 

        ;
        cp \$tmp_dir/prediction $output;
        rm \$tmp_dir -rf

    </command>
    <inputs>
        <param format="eden_sparse_vector" name="sparse_vector_infile" type="data" label="Input File" help=""/>
        <param format="txt" name="model_infile" type="data" label="Input Model" 
            help="created with the EDeN Train program"/>

        <expand macro="kernel_type_options" />

        <expand macro="graph_types" />

        <expand macro="normalization_kernel_hash_radius_dist_vertex" />

    </inputs>
    <outputs>
        <data format="tabular" name="output" label="Generated from ${on_string}"/>
    </outputs>
    <tests>
        <test>
        </test>
    </tests>
    <help>

.. class:: infomark

**What it does** 

The linear model is induced using the accelerated stochastic gradient descent technique by LÃ©on Bottou and Yann LeCun.
When the target information is 0, a self-training algorithm is used to impute a positive or negative class to the unsupervised instances.
If the target information is imbalanced a minority class resampling technique is used to rebalance the training set.

@references@

    </help>
</tool>
